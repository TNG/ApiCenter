buildscript {
    ext.kotlin_version = '1.4.20'
    ext.spring_boot_version = '2.4.0'
    ext.jackson_version = '2.12.0'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.4.20"
    id "org.jetbrains.kotlin.plugin.spring" version "1.4.21-2"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.4.21-2"
    id "org.springframework.boot" version "2.3.5.RELEASE"

    id "com.github.ben-manes.versions" version "0.36.0"
    id 'se.patrikerdes.use-latest-versions' version '0.2.15'

    id "com.diffplug.spotless" version "5.8.2"

    id "info.solidsoft.pitest" version "1.5.2"

    id "com.moowork.node" version "1.3.1"
    id "com.moowork.gulp" version "1.3.0"
    id "com.bmuschko.docker-spring-boot-application" version "5.3.0"
}

group 'com.tngtech.apicenter'
version '1.0.0-SNAPSHOT'

bootJar {
    manifest {
        attributes 'License': 'Apache License Version 2.0, January 2004'
    }
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // Spring
    compile "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"
    compile "org.springframework.boot:spring-boot-starter-security:$spring_boot_version"
    compile "org.springframework.boot:spring-boot-configuration-processor:$spring_boot_version"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$spring_boot_version"
    // Jackson
    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
    // DB
    compile "org.postgresql:postgresql:42.2.18"
    compile "com.h2database:h2:1.4.200"
    compile "org.flywaydb:flyway-core:6.5.7"
    compile "org.hibernate:hibernate-search-orm:5.11.7.Final"
    // Helpers
    compile "com.jayway.jsonpath:json-path:2.4.0"
    compile "org.apache.commons:commons-io:1.3.2"
    compile "net.rakugakibox.spring.boot:orika-spring-boot-starter:1.9.0"
    compile "io.github.microutils:kotlin-logging:2.0.4"
    compile "com.github.zafarkhaja:java-semver:0.9.0"
    compile ("com.qdesrame:openapi-diff:1.2.0") {
        exclude group: "org.slf4j", module: "slf4j-log4j12"
    }
    // Security & Auth
    compile "com.atlassian.crowd:crowd-integration-springsecurity:3.0.1"
    compile ("com.auth0:java-jwt:3.11.0") {
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
    }


    testCompile "org.springframework.boot:spring-boot-starter-test:$spring_boot_version"
    testCompile "org.springframework.security:spring-security-test:5.4.1"
    testCompile "org.assertj:assertj-core:3.18.1"
    testCompile "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testCompile "com.h2database:h2:1.4.199"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

configurations {
    integrationTestCompile.extendsFrom testCompile
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

docker {
    springBootApplication {
        baseImage = 'openjdk:8-alpine'
        tag = 'catenoid/apicenter:extdb'
        jvmArgs = ['-Dspring.profiles.active=docker']
        ports = [8080]
    }
}
