{
  "openapi": "3.0.0",
  "info": {
    "description": "REST API for ApiCenter - a repository for all your OpenAPI specifications",
    "version": "1.0.0",
    "title": "ApiCenter REST API",
    "license": {
      "name": "Apache License Version 2.0, January 2004"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Test against an instance of ApiCenter running on localhost"
    }
  ],
  "tags": [
    {
      "name": "service-controller",
      "description": "Operations to create, update, delete, and search for services"
    },
    {
      "name": "specification-controller",
      "description": "Operations to find and delete individual specifications"
    },
    {
      "name": "session-controller",
      "description": "Operations to authenticate users"
    }
  ],
  "paths": {
    "/service": {
      "get": {
        "tags": [
          "service-controller"
        ],
        "summary": "List all existing services",
        "operationId": "findAllServicesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "JWT to authenticate the user, preceded with the string 'Bearer '",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "service-controller"
        ],
        "summary": "Upload a new specification, or define a remote specification by its url",
        "operationId": "uploadSpecificationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "specificationFileDto",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SpecificationFileDto"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "JWT to authenticate the user, preceded with the string 'Bearer '",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecificationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/service/search/{searchString}": {
      "get": {
        "tags": [
          "service-controller"
        ],
        "summary": "Search for services by a search string",
        "operationId": "searchForServicesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchString",
            "in": "path",
            "description": "searchString",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "JWT to authenticate the user, preceded with the string 'Bearer '",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/service/{serviceId}": {
      "get": {
        "tags": [
          "service-controller"
        ],
        "summary": "Find a specific service by id",
        "operationId": "findServiceUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "JWT to authenticate the user, preceded with the string 'Bearer '",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "service-controller"
        ],
        "summary": "Update an existing service",
        "operationId": "updateServiceUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "specificationFileDto",
            "description": "specificationFileDto",
            "required": true,
            "schema": {
               "$ref": "#/components/schemas/SpecificationFileDto"
            }
          },
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "JWT to authenticate the user, preceded with the string 'Bearer '",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SpecificationDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "service-controller"
        ],
        "summary": "Delete a service by id",
        "operationId": "deleteSpecificationUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "JWT to authenticate the user, preceded with the string 'Bearer '",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/service/{serviceId}/synchronize": {
      "post": {
        "tags": [
          "service-controller"
        ],
        "summary": "Synchronize an existing service with its remote source",
        "operationId": "synchronizeServiceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "serviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "JWT to authenticate the user, preceded with the string 'Bearer '",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/service/{serviceId}/version/{version}": {
      "get": {
        "tags": [
          "specification-controller"
        ],
        "summary": "Retrieve a specific version of a specification.",
        "produces": [
          "application/json",
          "application/yml"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service for which the specification should be fetched.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version that should be fetched",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "JWT to authenticate the user, preceded with the string 'Bearer '",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "Desired file format, supports JSON and YAML. Defaults to JSON",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/SpecificationDto"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "specification-controller"
        ],
        "summary": "Delete a specific version of a specification.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service for which the specification should be deleted.",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "The version that should be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "session-controller"
        ],
        "summary": "Create a new session login to ApiCenter",
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "description": "The user credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created - the user was successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - the credentials of the user were rejected."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ServiceDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "remoteAddress": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "specifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecificationDto"
            }
          }
        },
        "required": [
          "id",
          "title",
          "specifications"
        ],
        "title": "ServiceDto"
      },
      "SpecificationFileDto": {
        "properties": {
          "metadata": {
            "$ref": "SpecificationFileMetadata"
          },
          "content": {
            "type": "string",
            "description": "The content of this specification"
          }
        },
        "required": [
          "metadata",
          "content"
        ]
      },
      "SpecificationFileMetadata": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Specification title, not necessarily unique"
          },
          "version": {
            "type": "string",
            "description": "Specification version"
          },
          "description": {
            "type": "string",
            "description": "Specification description"
          },
          "language": {
            "type": "string",
            "enum": [
              "OPENAPI",
              "GRAPHQL"
            ],
            "description": "Specification version"
          },
          "endpointUrl": {
            "type": "string",
            "description": "A test endpoint for this specification, if it cannot be stored in the specification itself (eg. GraphQL)"
          }
        },
        "required": [
          "title",
          "version",
          "language"
        ]
      },
      "SpecificationDto": {
        "properties": {
          "metadata": {
            "$ref": "SpecificationMetadata"
          },
          "content": {
            "type": "string",
            "description": "The content of this specification"
          }
        },
        "required": [
          "metadata",
          "content"
        ]
      },
      "SpecificationMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object",
            "description": "ID of the service containing this specification",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          "title": {
            "type": "string",
            "description": "Specification title, not necessarily unique"
          },
          "version": {
            "type": "string",
            "description": "Specification version"
          },
          "description": {
            "type": "string",
            "description": "Specification description"
          },
          "language": {
            "type": "string",
            "enum": [
              "OPENAPI",
              "GRAPHQL"
            ],
            "description": "Specification version"
          },
          "endpointUrl": {
            "type": "string",
            "description": "A test endpoint for this specification, if it cannot be stored in the specification itself (eg. GraphQL)"
          }
        },
        "required": [
          "id",
          "title",
          "version",
          "language"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The username of the user."
          },
          "password": {
            "type": "string",
            "description": "The password of the user."
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "SessionDto": {
        "type": "string",
        "properties": {
          "token": {
            "type": "string",
            "description": "The JWT that can be used to authenticate user requests."
          },
          "username": {
            "type": "string",
            "description": "The username of the logged in user."
          }
        },
        "required": [
          "token",
          "username"
        ]
      }
    }
  }
}